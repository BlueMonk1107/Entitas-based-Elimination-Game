//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FallStateComponent fallState { get { return (FallStateComponent)GetComponent(GameComponentsLookup.FallState); } }
    public bool hasFallState { get { return HasComponent(GameComponentsLookup.FallState); } }

    public void AddFallState(FallState newState) {
        var index = GameComponentsLookup.FallState;
        var component = CreateComponent<FallStateComponent>(index);
        component.state = newState;
        AddComponent(index, component);
    }

    public void ReplaceFallState(FallState newState) {
        var index = GameComponentsLookup.FallState;
        var component = CreateComponent<FallStateComponent>(index);
        component.state = newState;
        ReplaceComponent(index, component);
    }

    public void RemoveFallState() {
        RemoveComponent(GameComponentsLookup.FallState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFallState;

    public static Entitas.IMatcher<GameEntity> FallState {
        get {
            if (_matcherFallState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FallState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFallState = matcher;
            }

            return _matcherFallState;
        }
    }
}
