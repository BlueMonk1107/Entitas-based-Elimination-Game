//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AssetListenerComponent assetListener { get { return (AssetListenerComponent)GetComponent(GameComponentsLookup.AssetListener); } }
    public bool hasAssetListener { get { return HasComponent(GameComponentsLookup.AssetListener); } }

    public void AddAssetListener(System.Collections.Generic.List<IAssetListener> newValue) {
        var index = GameComponentsLookup.AssetListener;
        var component = CreateComponent<AssetListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAssetListener(System.Collections.Generic.List<IAssetListener> newValue) {
        var index = GameComponentsLookup.AssetListener;
        var component = CreateComponent<AssetListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAssetListener() {
        RemoveComponent(GameComponentsLookup.AssetListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAssetListener;

    public static Entitas.IMatcher<GameEntity> AssetListener {
        get {
            if (_matcherAssetListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AssetListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAssetListener = matcher;
            }

            return _matcherAssetListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAssetListener(IAssetListener value) {
        var listeners = hasAssetListener
            ? assetListener.value
            : new System.Collections.Generic.List<IAssetListener>();
        listeners.Add(value);
        ReplaceAssetListener(listeners);
    }

    public void RemoveAssetListener(IAssetListener value, bool removeComponentWhenEmpty = true) {
        var listeners = assetListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAssetListener();
        } else {
            ReplaceAssetListener(listeners);
        }
    }
}
