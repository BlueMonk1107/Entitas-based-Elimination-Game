//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EffectStateComponent effectState { get { return (EffectStateComponent)GetComponent(GameComponentsLookup.EffectState); } }
    public bool hasEffectState { get { return HasComponent(GameComponentsLookup.EffectState); } }

    public void AddEffectState(ItemEffctName newItemEffctName) {
        var index = GameComponentsLookup.EffectState;
        var component = CreateComponent<EffectStateComponent>(index);
        component.itemEffctName = newItemEffctName;
        AddComponent(index, component);
    }

    public void ReplaceEffectState(ItemEffctName newItemEffctName) {
        var index = GameComponentsLookup.EffectState;
        var component = CreateComponent<EffectStateComponent>(index);
        component.itemEffctName = newItemEffctName;
        ReplaceComponent(index, component);
    }

    public void RemoveEffectState() {
        RemoveComponent(GameComponentsLookup.EffectState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEffectState;

    public static Entitas.IMatcher<GameEntity> EffectState {
        get {
            if (_matcherEffectState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EffectState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEffectState = matcher;
            }

            return _matcherEffectState;
        }
    }
}
