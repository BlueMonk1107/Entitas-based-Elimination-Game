//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LoadPrefabComponent loadPrefab { get { return (LoadPrefabComponent)GetComponent(GameComponentsLookup.LoadPrefab); } }
    public bool hasLoadPrefab { get { return HasComponent(GameComponentsLookup.LoadPrefab); } }

    public void AddLoadPrefab(string newPath) {
        var index = GameComponentsLookup.LoadPrefab;
        var component = CreateComponent<LoadPrefabComponent>(index);
        component.path = newPath;
        AddComponent(index, component);
    }

    public void ReplaceLoadPrefab(string newPath) {
        var index = GameComponentsLookup.LoadPrefab;
        var component = CreateComponent<LoadPrefabComponent>(index);
        component.path = newPath;
        ReplaceComponent(index, component);
    }

    public void RemoveLoadPrefab() {
        RemoveComponent(GameComponentsLookup.LoadPrefab);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLoadPrefab;

    public static Entitas.IMatcher<GameEntity> LoadPrefab {
        get {
            if (_matcherLoadPrefab == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LoadPrefab);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLoadPrefab = matcher;
            }

            return _matcherLoadPrefab;
        }
    }
}
